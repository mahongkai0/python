
1.数据修改
    update acct set balance = balance + 100;

2.删除数据
    delete from acct where acct_no = ‘622345000001’；


3.运算符操作
    1）数值比较
        >< >= <=              <>或!=
    2）逻辑运算符
        and or
    3）范围比较
    in：  在某个集合范围内容
    not in ：不在某个范围
    between... and...  数值比较 在...到...

    4）模糊查询
    where name like ‘D%’；  _  ：匹配一个字符

    5）空 和非空
    is null 判断是否为空
    is not null   判断非空
4.查询字句
    1）order by：排序        asc       desc
    2）limit n    limit n,m
    3）聚合; max min sum count avg

    4)group by 跟聚合函数一起使用
        select acct_tupe count（*） 
        from acct 
        group by acct_type
    5）having  对group bu过滤
    6）distinct 去重


5.表结构调整
    alter table 表名 add 字段名称 【first | after 子段】
    
    
    修改字段类型
    alter table 表名 modify 字段名 类型

    修改字段名称
    alter table 表名 change 旧字段名 新字段名 类型

    删除字段
    alter table 表名 drop 字段名



今天的内容
    1.约束：数据规则
    2.索引：提高查询效率
    3.数据导入 导出
    4.表的复制 重命名


1.约束（constraint）
    -1） 约束:数据遵循的规则 为了保证数据的完整性  一致性 有效性
    -
    2）约束类型
    -非空约束 字段值不能为空
    -唯一约束：字段值不能重复
     -主键约束：指定字段作为主键 非空 唯一 
     -默认值： 未填写 值的情况下 自动填写默认值
     -自动增加: 字段的值自动增加
     -外键约束：在当前表不是主键 在另一个表里是主键 参照外键时  外键对应的实体必须存在 
    
    
    3）非空约束（not null）
    -指定字段的值不能为空 如果插入时没有设置值 并且没有默认值 插入就会报错

    -语法规则：字段名称 字段类型 not  null 
    4.唯一约束（unipque）
        -字段的值不能重复
        -语法： 字段名称 类型 sunipue
    5.主键约束（primary 简写PK）
    -PK用来唯一标示一笔记录 要求非空 唯一PK和一笔记录之间有唯一对应关系
     PK可以是一个字段构成 也可以多个属性共同构成
    -语法：字段名称 字段类型 Primary key
    6.默认值
    -当插入数据时，该字段如果没有填值  系统会自动填写默认值
    语法： 字段名称 类型 default 默认值
    示例;
    alter table custtomer add status int default 0;
    -- tel_no 未插入 则自动填写默认值
    
    7.自动增长
    -当字段设置为自动增长时 插入数据不需要填值
     数据库系统会自动在上一个值上面增加1
    -语法： 字段名称 字段类型 auto_increment
    create table ai_test(
        id int Primary key auto_increment,
        name varchar(32)
    );
    insert into ai_test values(null,'ccc')  -- id = 1
    insert into ai_test values(null,'cc')   -- id = 2
    insert into ai_test values(null,'cc')   -- id = 3
    
    8.外键（难点）
    -外键; 在当前表不是主键 另一个表的主键
    -作用： 保证参照的完整性.一致性
    -使用外键的条件
        表的存储引擎必须为InnoDB
        被参照字段在另外一个表里面必须是主键
        当前表中的字段类型和被参照的表中类型一致

    -语法： 
        constraint foreign key(当前表字段)
        references 参照表名(参照字段名称)

    -- 删除外键
    alter table 表名 drop foreign key 外键名



2.索引（重点）

    1）索引(index)
    -是一种提高查询效率的技术 相当于书的目录
    -包含着记录的引用的指针 根据引用指针快速找到数据存放的位置
    -通过避免全表扫描 来提高查询效率

    2）索引类别
    -普通索引、唯一索引
    -单例索引 组合索引


    3）如何创建索引
    -创建表的时候创建索引
    语法：字段名 字段类型 【index | unique|primary key】
        index 普通索引
        unique 唯一索引
        primary key 主键 自动成为唯一索引
        示例1：创建账号交易明细表
       
    -通过修改表的方式创建索引
        ######create 索引类型 索引名称 on  表名（字段名）
        alter table 表名 add 索引类型 索引名称（字段）
    
    -删除索引
    drop index 索引名称 on 表名
    e.g drop index trans_date on acct_trans_detail;

    -- 查看索引
    show index from acct_trans_detail;

    -- 添加索引
    create index trans_date on acct_trans_detail(trans_date);


    4)索引优缺点
    优点
    提高查询效率
    唯一索引能够保证数据的唯一性
    在使用索引字段分组、排序时 效率会提高

    缺点
    需要额外的存储空间
    创建和维护索引需要额外的时间
    降低增 删 改 的效率
    5）索引使用原则
    使用恰当的索引
    -索引并不是越多越好 索引太多影响增删改效率
     -适合使用索引的情况
        字段经常作为查询条件
        字段的值相对均匀 连续
        如果某个字段经常作为排序依据 适合加索引

        -不适合使用索引的情况
            不经常作为查询条件I=
            值太少的字段不适合索引（性别 账户状态）
            数据量太少不适合建立索引
            二进制类型的数据字段不适合建立索引
            主键、唯一索引 效率很高

3.数据导入导出
    1）导chu 
    -格式
    select outfile ‘文件路径’
    fields tterminated by ‘字段分隔符’
    lines terminated by ‘行分隔符’
    -示例：
    第一步;查看数据库允许导出的目录路径
        show variables like 'secure_file%'
        secure_file_priv:
    第二步：执行导出（导出到第一步所看的目录下）
        select * from 表名
        into outfile 'C:\ProgramData\MySQL\MySQL Server 5.7\Uploads\'
        fields terminated by ','
        lines terminated by '\n';


    2)导入
    -格式
    load data infile '备份文件路径'
    into table 表名称
    fields terminated by '字段分割符'
    lines terminated by '分割符'


4.表的复制、重命名
    1）复制
    -将源表完全复制为新表
    create table 新表名 
    select * from 旧表名;

部分复制：create table 新表名 
    select * from 旧表名 where 条件

    只拷贝表结构

    create table 新表名 
    select * from 旧表名 where 1 = 0；

    注意： 这种方式的赋值 不会把主键属性复制过来
    
    
    
    2）表重命名
    -格式：alter table 表名 rename to 新表名
    示例： alter table acct rename to acct_new;









