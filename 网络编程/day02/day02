







套接字：数据报，流式

 tcp套接字
 服务端  客户端


socket（） ---》bind---》listen（）--》accept---）recv（）/send（）--》close（）


客户端
socket（）---》connect（）---》send（）/recv（）---》close（）



tcp套接字传输特征
1.当一段退出时，另一端如果阻塞在recv 此时recv会立即结束阻塞返回空字符串

2.如果另一段退出 此时再试图调用send 向其发送时 会出现BrokenPipeError 异常
3. 一个监听套接字可以同时连接多个客户端套接字




网络收发缓冲区
    * send 和recv 实际是向缓冲区发送和接受内容
    * 只要缓冲区有内容recv就会接受 直到接收缓冲区为空
    * 协调网络消息的收发速度

    TCP粘包

    产生的原因
    1.多次发送的消息被一次接收
    2.tcp消息以字节流的方式传输 没有消息边界

    影响：如果每次发生的内容是一个独立含义的个体  粘包会产生一定影响

    处理粘包：

    1.消息结尾添加边界
    2.发送消息采取延迟策略
    3.将消息结构化处理


基于UDP套接字的网络过程

服务端
1.创建套接字  
    sockfd = socket（AF_INET,SOCK_DGRAM）     

2.绑定地址
sockfd.bind（addr）

3.收发消息
data，addr = sockfd.recvfrom（buffersize）
功能：接收数据报消息
参数;一次最多接受消息的大小（字节）
返回值：  data  接受到的内容
         addr 消息发送的地址
n = sockfd.sendto（data，addr）
功能：发送数据 报消息
参数：data 要发送的消息 bytes
      addr  发送消息的目标地址
返回：发送的字节数 


4.关闭套接字
sockfd.close（）


客户端流程
1.创建数据报套接字
2.收发消息
3.关闭套接字
cookie

sys.argv; 接受命令行参数



tcp套接字和udp套接字编程差异
1.流式套接字是以字节流的方式传输数据 数据报套接字则以数据报方式传输
2.tcp套接字会有粘包 但是utp套接字有消息边界不会 粘包
3.tcp套接字保证传输的可靠性 udp套接字无法保证
4.tcp套接字使用listen accpet进行连接 udp则不需要
5.tcp套接字使用recv  send收发消息  udp则用recvfrom  ，sendto

补充函数
sendall（data）
功能参数同send
返回值： 发送成功返回None  失败则产生异常


套接字对象属性
    sockfd.type     套接字类型
    sockfd.family   套接字地址族类型
    sockfd.getsockname()    获取套接字绑定地址
    sockfd.fileno()     获取套接字的文件描述符

文件描述符; 系统中每一个IO操作都会被分配一个 整数的文件描述符 用于系统区分不同的IO操作 文件描述符具有唯一性



sockfd.getpeername() 获取连接套接字客户端地址

sockfd.setsockopt(level,option,value)
功能：设置套接字选择功能

参数：level 选项级别 SOL_SOCKEY
      option  每个选项类别对应的子选项
    value  对选项设置值
* 设置最好紧跟在套接字创建之后

sockfd.getsockopt（level，option）
功能：获取套接字选项值
参数  level  选项级别  SOL_SOCKEY
        option 每个选项类别对应的子选项
    返回值：选项的值

udp应用之广播


广播特点：一点发送 多点接受
广播地址：每个网段最大的地址为广播地址
设置套接字可以发送接受广播
s.setsockopt（SOL_SOCKET,SO_BROADCAST,1） 



TCP套接字应用之HTTP传输
http协议  （超文本传输协议）  应用层协议

用途：  网页的获取
       数据的传输


http协议的特点
1.应用层协议，传输层使用tcp传输
2。简单 灵活  很多语言都有http专门的借口
3.无状态的协议  不记录用户的请求内容
4.请求方法多样  支持数据全面‘



网页请求流程
1.客户端（浏览器） 通过tcp传输发送http请求给服务端
2.服务端（http服务器） 接收到http请求
3.服务端处理具体的请求内容组织数据（网站后端）
4.服务端将数据以http响应的格式发送给客户端
5.客户端接受到服务器响应数据 进行解析展示

http请求  （request）

    请求格式 
        请求行：具体的请求类别和请求路径
            
            格式：GRT            /        HTTP/1.1
                请求类别         内容     协议版本
                
                类别：每种类别代表你要做不同的事情
                    GET     获取网络资源
                    POST    提交一定的信息 得到反馈
                    HEAD    只获取响应头
                    PUT     更新服务器资源
                    DELETE  删除服务器资源
                    CONNECT 
                    TRACE   测试
                    OPTIONS 获取服务器信息
       
        请求头：对请求内容的基本描述
        
        
        空行：
        
        
        请求体：请求参数或者提交内容




熟练tcp和udp服务器端代码
使用tcp完成一个文件的相互传输  要求可以传入文本 也可以传输图片  从客户端传输到服务端 
                                        或者从服务端传输到客户端均可











