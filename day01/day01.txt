硬件
　处理器
　运行内存
主板
输入设备.输出设备（显示屏　键盘　　鼠标）
外部存储设备　（硬盘ｕ盘）
软件
操作系统
　windows Linux UNIX
　应作软件
ＱＱ　微信

标
ctrl +alt   释放鼠标光
　　
ctrl +alt　＋　回车     全屏

Linux  基本结构
　　1.应用程序
　　2.标准库
　　3.Ｌｉｎｕｘ内核
　　4.硬件

  打开终端方法
  　搜索命令gnome -terminal
退出方法：
　　　$　exit
     ctrl + d

Linux命令
　　　
　　　Linux命令行格式
　命令名[选项][参数]
注：　［］　代表里面的命令可选
如　　
　　　$ls
     $ls - l
     $ls - l /home/
     $pwd
     $

    
文件和目录相关的命令
　　文件是用来存放数据的单位
　　目录是用来管理和分类文件的单位

pwd   查看当前文件的路径　　（当前工作目录）

ls  显示指定目录的文件或文件夹信息
　　格式：
　　　ls [选项][文件夹名/文件名]
常用选项：
　　－l　显示文件的详细信息
　　－a 显示全部文件/文件夹   (显示以.开头的文件)
　　如ls -a
   ls -la /home/tarena    
   ls /etc
注：
　　　Ｌinux ＵＮＩＸ 下　　以.开头的文件和文件夹默认为隐藏文件

Linux  下的路径
　　目录树
　　　　目录结构都为树形结构（目录树）
　　　　
路径　　Ｐath
　　路径是用来记录一个文件或文件夹的字符串
如;
      /home/tarena 
     /home/tarena/2.txt
     aid1811/linux/day01.txt
     根　　/    (root)
    路径分为两种
    　　绝对路径
    　　相对路径
　　以　／　开头的路径为绝对路径
　　如：
　/home/tarena/aid1811/linux
  /etc/passwd

相对路径：
　　不以　／　字符开头的路径为相对路径
　　　　相对是指相对于当前的工作目录（即pwd命令显示的目录）
　　　　
　　　开始符号
　　文件名或文件夹名称
.　当前文件夹
..　　上一级文件夹　（目录）
～　用户主目录（家目录）    
如：　
　　　ls -l ../../etc/passwd
     ls aid1811
     ls -l ~

用户主目录（家目录）　～

　　　用户目录是指操作系统为每个用户创建，由用户所拥有的目录
　～　代表当前用户主目录
　　　当前用户主目录为
／home/tarena
即　ls ~     等同于　　ls /home/tarena


cd 
 　改变当前的工作目录
 　　格式：　ｃｄ［目录名］
    cd ／home/tarena
    cd /
    cd ..  切换到用户文件夹 
    cd ～　　　进入到用户主目录
    cd －　　　　　切换到进入这个文件夹之前的文件夹
    mkdir   创建一个文件夹
    mkdir dir1 dir2 dir3  多个文件夹用空格隔开
    
    rmdir  删除命令
　　　　rmdir dir1 dir2 dir3

注：　用rmdir删除文件夹时　文件夹必须为空


touch　　　如果文件不存在　　则创建一个空文件（长度为0字节的文件夹）
　　　　　　如果文件或目录存在　　　则在系统时间更新他的修改时间
格式：
　touche　　文件名
　　　　　　
rm 命令
　　删除文件或者文件夹　
格式：
　　rm[选项]　文件或文件夹
　　常用选项
　　－r 递归删除文件夹内部的文件和文件夹
　　－i 删除前给出提示
　　－f  强制删除　　不给任何提示
示例：
　　　　rm a b c d 
       rm -r 

命令的　　help选项
　　用于显示命令的帮助信息
格式：
　　命令名　　－－help
如　ls --help

man　命令帮助　　　q 退出
man linux/UNIX命令名
作用：
　　　查看命令的对应的帮助手册


Ｔab 
   　补全命令名　或路径
   上下键
   　　翻出以前执行过的命令

   ctrl + l
   快速清屏幕　
   等同于clear 命令
   ctrl + shirt + c  复制
    ctrl + shirt + v   　粘贴

通配符
　　*　代表0个或一个或多个字符
　　？　代表一个任意字符
示例：
　　　　假设有文件
　　ａ　　ab  ac　abc aabb bc cd
rm *a    带a全删除
rm a?   等同于ab ac
     

cp  命令
作用：
　　　复制文件或文件夹
格式：　
　cp [选项]　　源文件或文件夹　目标文件或目标文件夹　　　　　等同于　cp   要复制的文件　目录/可以选择的更名
常用选项
－a 复制文件夹里面的内容
　　mv 命令
作用：
　　文件的搬移或者更名
格式：
　　mv 源文件或文件夹　目标文件或文件夹



find 查找命令
作用：
　　根据文件名称　　信息查找指定的文件
格式：
  find 路径　－name ＂文件名＂
  如：
  　　find /etc -name ＂passwd＂
  grep　命令
  　作用　：
　　　查找文件中的相对应的内容及文本信息
格式：
　grep ＂内容＂［选项］　文件名或路径
常用选项：
　－n  显示行号
  -r　　递归搜索文件夹的文件　　　grep "passwd" -nr*

示例：
　　　查找etc下有哪个文件里面由tedu这串文字
　　grep "tedu" -nr /etc


gzip ，命令

　　作用：　　用zip压缩算法对文件进行压缩　　生成压缩后的.gz 文件
命令格式：
　　　gzip 文件名
　压缩后的文件名通常为　　.gz 文件
gunzip 命令
　作用：　
与gzip 相反　对用zip压缩算法压缩的文件进行解压缩
格式：
　gunzip 文件名
 示例：
 　gunzip a.txt
  ls
  gunzip a.txt.gz


数据压缩算法：
　　分为两类
有损压缩
　　　ｍｐ3　　　jpg  mp4
无损压缩
    zip gz   png    gif    rar xz    

打包和解包的命令
　tar 命令
作用：　　对文件或文件夹进行打包的解包操作
　格式：
　　　tar [选项]　文件名　［文件名或路径］
常用选项
　－zcvf  文件名　　　创建包并进行压缩
　－zxvf  文件名　　　解压缩包到当前文件夹下
如：
　　　cd ~
   tar -zxvf aid1811.tar aid1811
   cp aid1811.tar.gz mytest/
   cd mytest
   tar -zxvf aid1811.tar.gz


tree　　命令
　　　　　只有在linux命令下由
以缩进的结构显示目录树
格式：　tree　文件夹名
　如：　　　tree aid1811
  



用户权限管理命令
sudo 命令
　作用：
　　　用超级用户root权限来执行这些命令
　格式　
　sudo 命令　［选项］［参数］　　示例：　mkdir
常用选项：
 -i 切换到root 用户
 　　示例：　sudo -i

 exit 命令
 　　退出用户登录


lianxi:
 1.在ａｉｄ1801 内创建pbase文件夹
 2.在pbase文件夹内创建　day01 day02 day03
 3.在day01 文件夹内创建linux code 两个文件和　day01.txt
 4.删除　aid1011/pbase/linux文件夹
 5.将aid1811/pbase/day01/day01.txt 复制到　day02/文件夹下　　并改名为day02

练习键盘　　用标准指法在ｖscode文本编辑器下抄写
2048game＿tkinter.py 文件名


python
day01 笔记


系统运维
网络编程（搜索引擎，爬虫，服务器编程）
科学计算
人攻智能
web开发
云计算
大数据及数据库编程
教育　　其他


优点
　　面向对象：　java c++ python
   免费
   可移植
   可混合编程（c++ c java net）
   简单易学
   开发效率高
   应用广泛
   开源
   缺点：
　　　　与ｃ　c＋＋相比　执行速度不够快
不能封闭源代码

　python 的官网
　　　网址：　　www.python.org
  python v2.7(2020年终束维护)
  python v3.5　　当前教学
  python v3.7　最新稳定版

python　兼容的操作系统
　　windows
   UNIX
   linux
   UNIX(ios aix)



python 解释执行器
　　　CPython(c语言开发)
　　　　　python3
　　　Ｊython (java语言开发)
　　　ＩronPython(.net开发)



执行paython　方法2

1.修改yy.py　在第一行的写入
#! /usr/bin/bython3               

2.为　ｘｘｘ.py　添加执行属性
　　　$chmod + x yy.py
3执行
./ yy.py

                                                                                                                                                              
常用的文件后缀
.py  python语言源文件
.c　　　ｃ语言源文件后缀
.cpp/ .cxx/.cc/ c++　　　　　　ｃ＋＋语言
.java　　　　ＪＡＶＡ语言源文件



在python 交互模式下执行python语言的代码
1.进入交互模式
python3
2.退出交互模式
quit()             exit()          ctrl + d



python  程序的组成
程序由模块组成
模块由数据　函数　　类等组成
语句表达包含表达式
表达式建立并处理数据对象


核心的数据类型
数字（整形　浮点型　fushu 　布尔型）

字符串
列表
...
整型　　ｉｎｔ
整型数是不带有小数点部分的数字　　包含自然数　　0　　及复数
如　　　－5　0　10　　880
　
整数字面值的表示方式
十进制
10
－100　　　　99999　　整数可以很大

二进制表示（0b开头　　后跟0或1）
如：
　0b111 等同于7   0b1010　＃等同于10   
八进制的方式表示：　　（0o开头　后跟0－7）
0o77   # = 127
0o11       #  = 9

十六进制　（０x开头　　后跟0～9　　Ａ～Ｆ或　a～f）
注：　　ａ表示10　　　b表示11　　ｃ表示12　ｄ表示13　ｅ14　　　　　f表示15
如：　　0ｘ11　　17
　　　　0ｘＦＦ　255
　　　　0ｘ1234ＡＢＣＤ

练习：
　计算0ｘＦＦＦＦ　　表示多少　　65535　　　　十六位最大
0xFFFFFFFF   表示多少　　　　　4294967295　　　32位最大
0ｂ1001　　表示多少　　9　　　　　
0ｏ71　　　　表示多少　57


浮点型
float　
浮点型是带有小数部分的数字（小数部分可以为0）
浮点数字面值表达方式　
小数表达法　　　3.14　　　3.1　　　3.0　　0.14　　.14

科学计数法　　　　
格式：　　　
小数　ｅ／Ｅ（正负号）指数
　　　　如　　
6.18Ｅ-1　　等同于0.618
2.9979Ｅ8　　等同于　299790000.0

复数　　complex
实部　　（ｒｅａｌ）
虚部　　　（ｉmage）
 虚部是以j 或Ｊ结尾的数

如：1j
  (2j)
 1+1J
 2 -2j
 (-100+100J)


布尔型

用来表示真和假两种状态的类型
True  表示真（条件满足可成立）   
false　表示假（条件不满足或不成立）
说明：　
Ｔrue  值为1
false  为 0
空值对象　Ｎone
Ｎoｎｅ  是一个表示不存在的特殊对象
作用：
　用来占位
变量接触绑定

表达式　和运算符
　expression 
由一个数字或数字和运算符组成
作用：
通常让计算器做一些事情并返回结果
如1 ＋2 * 3
None
1 + 5 > 2 + 3
9999

运算符算术运算符

＋　－　*　/　//　％　**幂运算

/除法　　得到的为浮点数　　不会丢弃小数部分　　（小数有精度）　　
　　1　/　3　得　0.33333333333
8　/　2　　4.0


**　幂运算
格式：
ｘ　**　ｙ　　　
ｘ　的　ｙ次方


运算符的优先级
　　

**　
*　/　//　％
示例：
1　＋　3　*　3　**　2　＋　4　//　2

括号分组子表达式
用（）可以将表达式分组　（）内部的表达式先进行运算
如：

2　*　（3　*（4　＋　8）-1）
2　*　3　*　4　＋　8-　1


混合类型自动升级
1　＋　2.14　得3.14　浮点型数

基本输出函数
0print(表达式1，表达式2，表达式3，...)
作用：
将表达式的结果作为终端输出



变量
什么是变量
变量是关联一个对象的符号
变量可以绑定一个对象　并可以通过变量名来使用这个对象
变量名必须是标识符

标识符的命名方法

标识符必须为字母或下划线开头，后跟字母下滑线或数字
不能用python的关键字
Ａ－Za-z_   Ａ－Za-z0-9_
起名规则如上


示例：
　　　　　　　ａ　A a1 bbbb set_age _ _abcd _abcde a1b2
不合法的标识符
   　　　1ａ　123　$ABC 　　＋a   -abc A#B


   python的关键字不能用作变量名(约33个)
　　　　　True False None is del if　elif 
   else    pass not  ......
赋值语句　　statements
运算符
＝
赋值语句的语法
变量名　＝　表达式
或
变量名1　＝　变量名２＝变量名３＝表达式
或
变量名1，变量名2，变量名3　＝　表达式1，表达式2，表达式3

作用：
创建变量或修改一个变量绑定的数据
赋值语句说明：
当变量不存在时　创建该变量　同时将变量绑定在这个对象上
当变量存在时　　改变此变量绑定（关联）的对象
一个变量只能绑定一个对象
两个变量可以同时绑定一个对象

示例：
a = 10
b = 20
a = 30  a最终绑定30

python　关联与绑定和引用的含义
在　python 中　　变量没有类型
关联/绑定/引用都是指变量和一个对象的关联关系
任何变量一定会绑定一个对象

python中的自动化内存管理
示例：
a = 10000
b = 20000
a = a + b
c = a 

在交互模式下查看当前作用的所有变量
＞＞＞　help("__main__")
退出键　q


del  语句
用于：

删除变量　同时接触与对象的关联，如果可能则释放对象
语法：
del 变量名1　变量名2
如：
　　x, y, z = 1, 2, 3
 del x
 del y, z


is /is not  运算符
作用：
　　判断两个对象是否是同一个对象，当是同一个对象时返回Ｔrue
否则返回Ｆalse
ｉs not de 作用与ｉs 相反
语法：
x is y
x is not y
注：　　x,y代表对象

小整数对象池
ＣＰthon  中　　　整数　-5　至256的数永远存在于小整数对象池中
不会释放并可重复使用



id 函数：
　　　作用：
　　　　　　返回一个对象在内存中的地址
　　　说明:
         is　运算符是根据id来进行判断的

如：　a ＝　10000
     id(a)

































