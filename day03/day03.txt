回顾：

运算符：
符合赋值运算符
+= = *= /= //=   %= **=
比较运算符
 < <= > >= == !=
 not  and   or
表达式：
 表达式1 if 真值表达式 else 表达式2
 语句：if 语句
  类型转换  int(x=0)
  int('字符串'，base = 10)  后面表示进制
  float（x） complex(read,image) bool(x)
数值形函数
abs（x）
round（数字，近似的位数）
pow（x，y， z = none）   x ** y%z
帮助函数
help（对象.类型.字符串）

day03 笔记
字符串 str
作用：
  用来记录文字（文本信息）

字符串的表示方式：
在非注释当中凡是用引号括起来的部分是字符串
‘’单引号
“”双引号
 ''' 三单引号
 """三双引号

注：  空字符串的布尔测试值bool（x）为False
非空字符串的表示方式
'hello'
"hello"
"""hello"""
'''hello'''
单引号和双引号的区别：
单引号内的双引号不算结束符
双引号内的单引号不算结束符


三引号字符串
以"""或 ''' 开头和结尾的字符串
作用：
三引号内可以包含单引号和双引号
三引号字符串中的换行会自动转换为换行符 '\n'

隐式字符串字面值拼接

多个字符串字面值连在一起时  python解释执行器会自动拼接为一个字符串

s = "i 'am xuesheng"  'my name "luo"'
print(s)   #拼接后的内容

用转义字符序列代表特殊字符
字符串子面值当中用字符反斜杠（\）后跟一个或一些字符代表特殊的一个字符
转义格式  含义
  \'           单引号(')
  \\"          双引号 ("")
   \\          一个反斜杠(\)
   \n          换行符
   \r          返回光标至行首（回车符）
   \f           换页
   \t           水平制表符
   \v           垂直制表符
 \b             倒退
 \a             响铃
 \0              空字符（字符值为0）
 \0oo            oo为两位八进制表示的字符
 \xXX            XX为两位十六进制表示的字符
 \uXXXX           XXXX为四位十六进制表示的UNICODE16字符
 \UXXXXXXXX          XXXXXXXX 为八位十六进制表示的UNICODE32字符


ASCII编码表
Linux 查看方式:
$ man ascii


常用的ascii编码
　字：
　字符　　十进制　　　十六进制
 '0'　　  48      　　0x30
 'A'      65        0x41
'a'       97       0x61


python3中字符串默认存储的是ＵＮＩＣＯＤＥ编码值
0x0000 ~ (从0　开始)


序列的感念
　　　字符串是序列
　　　序列是指由先后顺序的排列
求序列的长度的函数ｌｅｎ
len（s） 返回字符串字符的个数



raw 字符串（原始字符串）
格式：
r'字符串内容'
r"字符串内容"
r'''字符串内容'''
r"""字符串内容"""
作用：
让转义符号＼无效
示例：
用字符串形成一个windows下的路径                            s = '\a\b\c\d'
Ｃ：＼newfile\test.py                                   打印：
path = 'Ｃ：＼newfile\test.py' 　　　　　　　　　　　　　　　s = r'\a\b\c\d'
path = r'Ｃ：＼newfile\test.py' 　                       结果：\a\b\c\d'


字符串的运算

＋　＋＝　　　*　　*＝

＋加号运算符用于拼接字符串
x = "abcd"
y = "1234"
z = x + y
print(z)   abcd1234
a = y + x
print(a)   1234abcd
+=    用原子符串与右侧打扰字符串拼接　生成新的字符串
再用原　变量绑定新　的字符串
如
ｘ　＝　＇abcd＇
x += '123'
print(x)   abcd123


 * 生成重复的字符串
 x = "abc"  * 3
    x = "abcabcabc"
y = 3 * "123"
    y = "123123123"

只能与整数乘

*＝　生成重复的字符串　再用变量重新绑定
x = '123'
x *= 3
x = '123123123'

字符串比较大小
运算符：
　　< <=  >   >=   ==   !=
规则：
依次按编码值进行两两比较　　　一旦不同　则比较结果　返回比
较结果　　　当编码值的长度完全相同时，两个字符串相同
示例：
'A' < 'B'  True
'ABC' > 'ABB'   True
'ADC' <'ABC'   False
'ABC' >= '123'   True
'AD' >= 'ABC' True
'AB' < 'ABC' True
'ABC' < 'abc' True
'abcd' != 'dcba' true

in /not in 
作用：
in　用于序列　字典　集合中　用于判断某个值是否存在于容器
中，如果存在则返回ｔｒｕｅ　否则返回Ｆalsse
not in  与　in 的返回值相反
格式：
对象　in  序列

x = 'dsnshksjknjjdslm'
'l' in x
True

X = 'NNSS dkj o tds'
'o t' in x
True

X = 'NNSS dkj o tds'
'ot' in x
False


字符串的索引操作
索引　　
index
python字符串中是不可以被改变的序列

语法：
字符串［整数表达式］
说明：
python 序列都可以用索引（index）　访问序列中的元素
python　；序列的正向索引是从0开始的　第二个索引为1
最后一个索引为len(s) - 1
python 序列的反向索引是从　－1开始的　　－1代表倒数第一个－2
代表倒数第二个　依次类推　　第一个是-len(s)
示例：
s = 'ABCDE'
print(s[1])

＃B

字符串的索引必须是整数


　　s = "＇ABCDE＇"
    print(s[1])   #B
    print(s[4])   #E
    print(s[-1])   #E
    print(s[-5])   #A
    print(s[100])   #  IndexError 越界
  


 切片  slice
      作用;
         从字符串序列中取出相应打元素重新组成一个新的字符串序列
    　语法：
    　　　字符串［（开始索引ｂ）：（结束索引ｅ）（　：（步长ｓ））］
　　　　　注：
　　　　　　小括号（）括起来的部分代表可省略
    　说明：
    　　　　开始索引是切片开始切下的位置　，0代表第一个元素，1代表
    　　　　第二个元素，　　　－1代表最后一个　....
    　　　结束索引是切片的终止索引（但不包含终止点）
    　　　步长是切片每次获取完当前元素后移动的方向和偏移量
　　　　　　　　1.　没有步长　相当于与步长为1　　（默认为1）
　　　　　　　　2.当步长为正整数时　　取正向切片：
　　　　　　　　　　开始索引默认为0　　结束索引默认是最后一个元素
　　　　　　　　的下一个位置　
　　　　　　　　3.　当步长为负整数时取反向切片;
                 反向切片时　默认的起始位置为最后一个元素，终止位
                 置是第一个元素的前一个位置



　　　示例：　ｓ　= ＂ＡＢＣＤｅ＂　　　a＝s[1：4]　　切下bcd　　　
　　　　　　　　　　　　　　　　　　　　　［1:1］  所得为空　　　
　　　　　　　　　　　　　　　　　　　　　  0［4：2］　　　所得为空
　　　　　　　　　　　　　　　　　　　　　　［1：］　　　BCDe
                                        [:4]      ABCD
                                         [0:5:2]    ACE
                                       2代表步长一　下切几个
　　　　　　　　　　　　　　　　　　　　　　［4：0：－2］　　EC
　　　　　　　　　　　　　　               [4::-2]   ECA




python3中能用于字符串的函数：
　　　　 len(x)   返回字符串长度
        max(x)　　返回字符串编码值最大的字符
        min(x)　　返回字符串编码值最小的字符
     
   字符串的编码转换函数：
   　ord(c)  返回一个字符ｃ的unicode的编码值
   　chr(i)   返回i这个值所对应的字符
ord  次序的意思　全文　：order

　示例：　　　
　　　  x = ord('A')    #x = 65
       c = chr(66)     #c = 'B'　
         


整数转换为字符串的函数：
  　bin(i)   将整数转换为二进制字符串
　　oct(i)    将整数转换为八进制字符串
　　hex(i)     将整数转换为十六进制字符串


字符串构造函数：
　　str(obj='')   将对象转换为字符串


str()  等同于＇＇  相当于创建一个空的字符串
如　　将10000变成字符串

str(10000)
==>  '10000'

python3中字符串方法
方法调用语句：
对象，方法名（方法传参）
示例：
＇abc＇.isalpha()  #正确
123.isalpha()    #错误
字符串的常用方法文档参见＂
  





































































































