day05
    while的注意事项
    　要控制循环的真值表达式的值来防止死循环
    　通常用真值表达式内的环境变量来控制循环条件
    　通常在语句内部改变循环变量
while 语句嵌套：
　   while 语句本身就是语句，和其他语句一样，可以嵌套到任何
　　　的复合语句中

示意：
　　　while　真值表达式
　　　　  ...．
         while  真值表达式2
         　　　.... 
         else：
         　　  ....
     else：
        ...      

  　break   语句　
  问题：
  　　如果在循环过程中不想再继续循环语句的执行来　　怎么办
  　
作用：
　　　用在循环语句当中（while,for语句）中，　用来终止当前循环语句
　　的执行
说明：
　　　当break　语句执行后　此循环语句break之后的语句将不再执行
　　　break　语句通常和if语句组合使用
　　　break  语句终止循环时　循环语句的else自居的语句不会执行
　　　break  语句只能终止当前循环语句的执行　如果有循环嵌套
　　　　　　　时，不会跳出起嵌套的外重循环
　　　break  语句只能在循环语句（while,for语句）的内部使用


索引：　索引是建立文档在位置的查找请单，使用索引可以方便的进行
　　　　快速查找　　减少遍历次数　提高查找效率


死循环
　　　死循环是指循环条件一直成立的循环
　　　死循环能通常用break语句来终止循环
　　　死循环的else　子句永远不会执行
　　
for 语句
   作用：
   　　用来遍历可迭代对象的数据元素
       　可迭代对象是指能一次获取元素的对象
       如：
       　　字符串　　列表　　元组，range函数返回的对象等
       语法：
       　
   　　  for 变量列表 in 可迭代对象:
　　　　　    语句块1（此句是可能重复执行的语句块）
         else：
            语句块2
    说明：
    　　　当在循环体内用break终止循环时，else子句部分的
    　　　语句不会执行
    　
    　　　else子句部分可以省略
    
range()  函数
　　　range(stop)  用来生成0～stop区间内的整数，直到stop为止
　　　　　　　　　　　　　　　（不包含stop）
　　　range(start, stop[step])  用来生成start~stop区间内
　　　　　　的整数，直到stop为止（不包含stop）
　　　　　　每个整数间隔step
格式详见：
　>>> help(range)
作用：
　　用来创建一个生成一系列整数的可迭代对象（也叫整数序列生成器）

示意：　range(4)    0123
      range(3,6)    345
       range(1,10,2)    13579
       range(5,0,-1)     54321
       range(4,0)      空

 for 嵌套
 　　示例：
 　　　　for x in "ABC"
            for y in "123"    结果：　Ａ1Ａ2Ａ3
                print(x + y)　　　　　　Ｂ1Ｂ2Ｂ3
　　　　　　　　　　　　　　　　　　　　　　　　Ｃ1Ｃ2Ｃ3
continue
作用：
　　用于循环语句（while, for）中，不再执行本次循环内
　　continue之后的语句，重新开始一次新的循环
说明：
　　　1.在while语句中执行continue语句，将会跳转到
    while语句的真值表达式，重新判断循环条件
    　2.在for语句中执行continue语句，将会从可迭代对象
    　中取下一个数据绑定变量后再次循环
    
    循环总结：
    　　while　语句
    　　for    语句
    　　　　　字符串str
    　　　　　range() 函数返回的对象
    　 break  语句
　　　　continue

如何将计算机运算的数据临时存入一个地方　　同时又
方便添加　删除　修改　查看等操作
　　　


列表　　list
         列表是一种容器
         列表是可以被改变的序列容器

创建列表的字面值
　　　Ｌ＝［］　Ｌ绑定一个新创建的空间列表
创建一个非空列表的字面值
　　　Ｌ＝［1，2，3，4］
　　　Ｌ＝［＂北京＂，＂上海＂，＂深圳＂］　　　
　　　Ｌ＝［1，＂二＂,[3.14，＂Four＂]］

列表的构造函数（创建）函数
　　　　list()   创建一个空的列表　　＝　［］
　　　　list(iterable)  用可迭代对象创建一个列表
示例：
  L = list()     　　　　　　　　绑定空列表
  L = list("heloo")　　　　　　绑定［'h','e','l','l','o'］
  L = list(range(10))        绑定［0，1，..，9］

列表的运算　　属于序列的一种
　　　算数运算符　
　　　　　　＋　　　有序的加
　       +=    用于原列表与右侧可迭代对象进行拼接，用变量绑定列表
          　　　语法：　x += 可迭代对象
　　　　　　　　　　　如：  x = [1,2,3]
　　　　　　　　　　　　    y = [4,5,6]
                       x += y  -->   
                        x = [1,2,3,4,5,6]

        
          *    生成重复的列表
　　　　　　　　x = [1,2] * 3
            -->   x = [1,2,1,2,1,2]
              x *= 2
              -->  x = [1,2,1,2]


　　　　　　*= 　让原列表重复ｎ次再用原变量绑定
　　　　　　　　































































































　